1:			begin_func QuickSort.quickSort@int[]@int@int
2:			high = pop_param;
3:			low = pop_param;
4:			arr = pop_param;
5:			##t45 = low < high;
6:			##t44 = ##t45;
7:			if_false ##t44 goto 43;
8:			##t64 = arr;
9:			##t68 = low;
10:			##t72 = high;
11:			push_param ##t64;
12:			push_param ##t68;
13:			push_param ##t72;
14:			shift_pointer -56
15:			call_func QuickSort.partition@int[]@int@int;
16:			shift_pointer +56
17:			##t59 = return_value;
18:			##t58 = ##t59;
19:			##t57 = ##t58;
20:			pi = ##t57;
21:			##t81 = arr;
22:			##t85 = low;
23:			##t90 = pi - 1;
24:			##t89 = ##t90;
25:			push_param ##t81;
26:			push_param ##t85;
27:			push_param ##t89;
28:			shift_pointer -32
29:			call_func QuickSort.quickSort@int[]@int@int;
30:			shift_pointer +32
31:			return_value;
32:			##t99 = arr;
33:			##t104 = pi + 1;
34:			##t103 = ##t104;
35:			##t109 = high;
36:			push_param ##t99;
37:			push_param ##t103;
38:			push_param ##t109;
39:			shift_pointer -32
40:			call_func QuickSort.quickSort@int[]@int@int;
41:			shift_pointer +32
42:			return_value;
43:			end_func
44:			begin_func QuickSort.partition@int[]@int@int
45:			high = pop_param;
46:			low = pop_param;
47:			arr = pop_param;
48:			##t156 = high;
49:			##t153 = arr;
50:			##t155 = *(##t153 + 8);
51:			##t156 = ##t156 * 8;
52:			##t156 = ##t156 + 16;
53:			##t153 = ##t153 + ##t156;
54:			##t153 = *(##t153);
55:			##t152 = ##t153;
56:			##t151 = ##t152;
57:			pivot = ##t151;
58:			##t170 = low - 1;
59:			##t169 = ##t170;
60:			##t167 = ##t169;
61:			##t166 = ##t167;
62:			##t165 = ##t166;
63:			i = ##t165;
64:			##t185 = low;
65:			##t184 = ##t185;
66:			j = ##t184;
67:			##t188 = j < high;
68:			##t187 = ##t188;
69:			if_false ##t187 goto 120;
70:			##t206 = j;
71:			##t203 = arr;
72:			##t205 = *(##t203 + 8);
73:			##t206 = ##t206 * 8;
74:			##t206 = ##t206 + 16;
75:			##t203 = ##t203 + ##t206;
76:			##t203 = *(##t203);
77:			##t202 = ##t203 < pivot;
78:			##t201 = ##t202;
79:			if_false ##t201 goto 116;
80:			##t214 = i;
81:			##t216 = ##t214 + 1;
82:			i = ##t216;
83:			##t228 = i;
84:			##t225 = arr;
85:			##t227 = *(##t225 + 8);
86:			##t228 = ##t228 * 8;
87:			##t228 = ##t228 + 16;
88:			##t225 = ##t225 + ##t228;
89:			##t225 = *(##t225);
90:			##t224 = ##t225;
91:			##t223 = ##t224;
92:			temp = ##t223;
93:			##t237 = i;
94:			##t234 = arr;
95:			##t236 = *(##t234 + 8);
96:			##t237 = ##t237 * 8;
97:			##t237 = ##t237 + 16;
98:			##t234 = ##t234 + ##t237;
99:			##t244 = j;
100:		##t241 = arr;
101:		##t243 = *(##t241 + 8);
102:		##t244 = ##t244 * 8;
103:		##t244 = ##t244 + 16;
104:		##t241 = ##t241 + ##t244;
105:		##t241 = *(##t241);
106:		##t240 = ##t241;
107:		*(##t234) = ##t240;
108:		##t252 = j;
109:		##t249 = arr;
110:		##t251 = *(##t249 + 8);
111:		##t252 = ##t252 * 8;
112:		##t252 = ##t252 + 16;
113:		##t249 = ##t249 + ##t252;
114:		##t255 = temp;
115:		*(##t249) = ##t255;
116:		##t192 = j;
117:		##t194 = ##t192 + 1;
118:		j = ##t194;
119:		goto 67;
120:		##t271 = i + 1;
121:		##t270 = ##t271;
122:		##t267 = arr;
123:		##t269 = *(##t267 + 8);
124:		##t270 = ##t270 * 8;
125:		##t270 = ##t270 + 16;
126:		##t267 = ##t267 + ##t270;
127:		##t267 = *(##t267);
128:		##t266 = ##t267;
129:		##t265 = ##t266;
130:		temp = ##t265;
131:		##t282 = i + 1;
132:		##t281 = ##t282;
133:		##t278 = arr;
134:		##t280 = *(##t278 + 8);
135:		##t281 = ##t281 * 8;
136:		##t281 = ##t281 + 16;
137:		##t278 = ##t278 + ##t281;
138:		##t290 = high;
139:		##t287 = arr;
140:		##t289 = *(##t287 + 8);
141:		##t290 = ##t290 * 8;
142:		##t290 = ##t290 + 16;
143:		##t287 = ##t287 + ##t290;
144:		##t287 = *(##t287);
145:		##t286 = ##t287;
146:		*(##t278) = ##t286;
147:		##t299 = high;
148:		##t296 = arr;
149:		##t298 = *(##t296 + 8);
150:		##t299 = ##t299 * 8;
151:		##t299 = ##t299 + 16;
152:		##t296 = ##t296 + ##t299;
153:		##t302 = temp;
154:		*(##t296) = ##t302;
155:		##t307 = i + 1;
156:		##t306 = ##t307;
157:		return ##t306;
158:		end_func
159:		begin_func QuickSort.main@String[]
160:		args = pop_param;
161:		##t348 = 5;
162:		##t346 = ##t348;
163:		##t343 = ##t346 * 8;
164:		##t343 = ##t343 + 16;
165:		push_param ##t343;
166:		call_func allocmem;
167:		##t344 = return_value;
168:		##t343 = ##t344;
169:		*(##t343) = 1;
170:		##t344 = ##t344 + 8;
171:		*(##t344) = ##t346;
172:		##t342 = ##t343;
173:		##t341 = ##t342;
174:		arr = ##t341;
175:		##t365 = 5 * 23;
176:		##t364 = ##t365 - 21;
177:		##t363 = ##t364;
178:		##t361 = ##t363;
179:		##t360 = ##t361 / 5;
180:		##t359 = ##t360 - 13;
181:		##t358 = ##t359;
182:		##t357 = ##t358;
183:		a = ##t357;
184:		##t378 = 0;
185:		##t375 = arr;
186:		##t377 = *(##t375 + 8);
187:		##t378 = ##t378 * 8;
188:		##t378 = ##t378 + 16;
189:		##t375 = ##t375 + ##t378;
190:		##t381 = a;
191:		*(##t375) = ##t381;
192:		##t389 = 1;
193:		##t386 = arr;
194:		##t388 = *(##t386 + 8);
195:		##t389 = ##t389 * 8;
196:		##t389 = ##t389 + 16;
197:		##t386 = ##t386 + ##t389;
198:		##t392 = 1;
199:		*(##t386) = ##t392;
200:		##t400 = 2;
201:		##t397 = arr;
202:		##t399 = *(##t397 + 8);
203:		##t400 = ##t400 * 8;
204:		##t400 = ##t400 + 16;
205:		##t397 = ##t397 + ##t400;
206:		##t403 = 4;
207:		*(##t397) = ##t403;
208:		##t411 = 3;
209:		##t408 = arr;
210:		##t410 = *(##t408 + 8);
211:		##t411 = ##t411 * 8;
212:		##t411 = ##t411 + 16;
213:		##t408 = ##t408 + ##t411;
214:		##t414 = 2;
215:		*(##t408) = ##t414;
216:		##t422 = 4;
217:		##t419 = arr;
218:		##t421 = *(##t419 + 8);
219:		##t422 = ##t422 * 8;
220:		##t422 = ##t422 + 16;
221:		##t419 = ##t419 + ##t422;
222:		##t425 = 8;
223:		*(##t419) = ##t425;
224:		##t434 = 5;
225:		##t433 = ##t434;
226:		n = ##t433;
227:		##t442 = arr;
228:		##t446 = 0;
229:		##t451 = n - 1;
230:		##t450 = ##t451;
231:		push_param ##t442;
232:		push_param ##t446;
233:		push_param ##t450;
234:		shift_pointer -32
235:		call_func QuickSort.quickSort@int[]@int@int;
236:		shift_pointer +32
237:		return_value;
238:		##t465 = 0;
239:		##t464 = ##t465;
240:		i = ##t464;
241:		##t468 = i < n;
242:		##t467 = ##t468;
243:		if_false ##t467 goto 259;
244:		##t486 = i;
245:		##t483 = arr;
246:		##t485 = *(##t483 + 8);
247:		##t486 = ##t486 * 8;
248:		##t486 = ##t486 + 16;
249:		##t483 = ##t483 + ##t486;
250:		##t483 = *(##t483);
251:		##t482 = ##t483;
252:		push_param ##t482;
253:		call_func print;
254:		return_value;
255:		##t472 = i;
256:		##t474 = ##t472 + 1;
257:		i = ##t474;
258:		goto 241;
259:		end_func
