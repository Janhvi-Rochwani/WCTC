1:			begin_func QuickSort.quickSort@int[]@int@int
2:			high = pop_param;
3:			low = pop_param;
4:			arr = pop_param;
5:			##t1 = low < high;
6:			if_false ##t1 goto 38;
7:			##t2 = arr;
8:			##t3 = low;
9:			##t4 = high;
10:			push_param ##t2;
11:			push_param ##t3;
12:			push_param ##t4;
13:			shift_pointer -56
14:			call_func QuickSort.partition@int[]@int@int;
15:			shift_pointer +56
16:			##t5 = return_value;
17:			pi = ##t5;
18:			##t6 = arr;
19:			##t7 = low;
20:			##t8 = pi - 1;
21:			push_param ##t6;
22:			push_param ##t7;
23:			push_param ##t8;
24:			shift_pointer -32
25:			call_func QuickSort.quickSort@int[]@int@int;
26:			shift_pointer +32
27:			return_value;
28:			##t9 = arr;
29:			##t10 = pi + 1;
30:			##t11 = high;
31:			push_param ##t9;
32:			push_param ##t10;
33:			push_param ##t11;
34:			shift_pointer -32
35:			call_func QuickSort.quickSort@int[]@int@int;
36:			shift_pointer +32
37:			return_value;
38:			end_func
39:			begin_func QuickSort.partition@int[]@int@int
40:			high = pop_param;
41:			low = pop_param;
42:			arr = pop_param;
43:			##t12 = high;
44:			##t13 = arr;
45:			##t14 = *(##t13 + 8);
46:			##t12 = ##t12 * 8;
47:			##t12 = ##t12 + 16;
48:			##t13 = ##t13 + ##t12;
49:			##t13 = *(##t13);
50:			pivot = ##t13;
51:			i = low - 1;
52:			j = low;
53:			##t15 = j < high;
54:			if_false ##t15 goto 96;
55:			##t16 = j;
56:			##t17 = arr;
57:			##t18 = *(##t17 + 8);
58:			##t16 = ##t16 * 8;
59:			##t16 = ##t16 + 16;
60:			##t17 = ##t17 + ##t16;
61:			##t17 = *(##t17);
62:			##t19 = ##t17 < pivot;
63:			if_false ##t19 goto 94;
64:			i = i + 1;
65:			##t20 = i;
66:			##t21 = arr;
67:			##t22 = *(##t21 + 8);
68:			##t20 = ##t20 * 8;
69:			##t20 = ##t20 + 16;
70:			##t21 = ##t21 + ##t20;
71:			##t21 = *(##t21);
72:			temp = ##t21;
73:			##t23 = i;
74:			##t24 = arr;
75:			##t25 = *(##t24 + 8);
76:			##t23 = ##t23 * 8;
77:			##t23 = ##t23 + 16;
78:			##t24 = ##t24 + ##t23;
79:			##t26 = j;
80:			##t27 = arr;
81:			##t28 = *(##t27 + 8);
82:			##t26 = ##t26 * 8;
83:			##t26 = ##t26 + 16;
84:			##t27 = ##t27 + ##t26;
85:			##t27 = *(##t27);
86:			*(##t24) = ##t27;
87:			##t29 = j;
88:			##t30 = arr;
89:			##t31 = *(##t30 + 8);
90:			##t29 = ##t29 * 8;
91:			##t29 = ##t29 + 16;
92:			##t30 = ##t30 + ##t29;
93:			*(##t30) = temp;
94:			j = j + 1;
95:			goto 53;
96:			##t32 = i + 1;
97:			##t33 = arr;
98:			##t34 = *(##t33 + 8);
99:			##t32 = ##t32 * 8;
100:		##t32 = ##t32 + 16;
101:		##t33 = ##t33 + ##t32;
102:		##t33 = *(##t33);
103:		temp = ##t33;
104:		##t35 = i + 1;
105:		##t36 = arr;
106:		##t37 = *(##t36 + 8);
107:		##t35 = ##t35 * 8;
108:		##t35 = ##t35 + 16;
109:		##t36 = ##t36 + ##t35;
110:		##t38 = high;
111:		##t39 = arr;
112:		##t40 = *(##t39 + 8);
113:		##t38 = ##t38 * 8;
114:		##t38 = ##t38 + 16;
115:		##t39 = ##t39 + ##t38;
116:		##t39 = *(##t39);
117:		*(##t36) = ##t39;
118:		##t41 = high;
119:		##t42 = arr;
120:		##t43 = *(##t42 + 8);
121:		##t41 = ##t41 * 8;
122:		##t41 = ##t41 + 16;
123:		##t42 = ##t42 + ##t41;
124:		*(##t42) = temp;
125:		##t44 = i + 1;
126:		return ##t44;
127:		end_func
128:		begin_func QuickSort.main@String[]
129:		args = pop_param;
130:		##t45 = 5;
131:		##t46 = 56;
132:		push_param 56;
133:		call_func allocmem;
134:		##t47 = return_value;
135:		##t46 = ##t47;
136:		*(##t46) = 1;
137:		##t47 = ##t47 + 8;
138:		*(##t47) = ##t45;
139:		arr = ##t46;
140:		a = 5;
141:		##t48 = 0;
142:		##t49 = arr;
143:		##t50 = *(##t49 + 8);
144:		##t48 = ##t48 * 8;
145:		##t48 = ##t48 + 16;
146:		##t49 = ##t49 + ##t48;
147:		*(##t49) = a;
148:		##t51 = 1;
149:		##t52 = arr;
150:		##t53 = *(##t52 + 8);
151:		##t51 = ##t51 * 8;
152:		##t51 = ##t51 + 16;
153:		##t52 = ##t52 + ##t51;
154:		*(##t52) = 1;
155:		##t54 = 2;
156:		##t55 = arr;
157:		##t56 = *(##t55 + 8);
158:		##t54 = ##t54 * 8;
159:		##t54 = ##t54 + 16;
160:		##t55 = ##t55 + ##t54;
161:		*(##t55) = 4;
162:		##t57 = 3;
163:		##t58 = arr;
164:		##t59 = *(##t58 + 8);
165:		##t57 = ##t57 * 8;
166:		##t57 = ##t57 + 16;
167:		##t58 = ##t58 + ##t57;
168:		*(##t58) = 2;
169:		##t60 = 4;
170:		##t61 = arr;
171:		##t62 = *(##t61 + 8);
172:		##t60 = ##t60 * 8;
173:		##t60 = ##t60 + 16;
174:		##t61 = ##t61 + ##t60;
175:		*(##t61) = 8;
176:		n = 5;
177:		push_param arr;
178:		push_param 0;
179:		push_param 4;
180:		shift_pointer -32
181:		call_func QuickSort.quickSort@int[]@int@int;
182:		shift_pointer +32
183:		return_value;
184:		i = 0;
185:		##t63 = i < n;
186:		if_false ##t63 goto 199;
187:		##t64 = i;
188:		##t65 = arr;
189:		##t66 = *(##t65 + 8);
190:		##t64 = ##t64 * 8;
191:		##t64 = ##t64 + 16;
192:		##t65 = ##t65 + ##t64;
193:		##t65 = *(##t65);
194:		push_param ##t65;
195:		call_func print;
196:		return_value;
197:		i = i + 1;
198:		goto 185;
199:		end_func
200:		begin_func QuickSort##Default
201:		this = pop_param;
202:		end_func
